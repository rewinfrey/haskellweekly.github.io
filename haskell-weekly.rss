<?xml version="1.0" encoding="utf-8"?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell Weekly</title>
    <link>https://haskellweekly.news</link>
    <description></description>
    <atom:link rel="self" href="https://haskellweekly.news/haskell-weekly.rss" />

    <item>
  <guid>https://haskellweekly.news/issues/123.html</guid>
  <title>Issue 123</title>
  <link>https://haskellweekly.news/issues/123.html</link>
  <pubDate>Thu, 06 Sep 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.well-typed.com/blog/2018/09/compositional-zooming/">Compositional zooming for &lt;code>StateT&lt;/code> and &lt;code>ReaderT&lt;/code> using &lt;code>lens&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Suppose we want to write an update that changes one of the fields in a particular address. If the address cannot be found, we want a precise error message that distinguishes between the address itself not being found, or one of its parents (the account, or the wallet) not being found.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://wickstrom.tech/programming/2018/09/04/declarative-gtk-programming-with-haskell.html">Declarative GTK+ programming with Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This post introduces a declarative GTK+ architecture for Haskell which I’ve been working on during the journey with FastCut, a video editor specialized for my own screencast editing workflow. It outlines the motivation, introduces the packages and their uses, and highlights parts of the implementation.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://jaspervdj.be/posts/2018-09-04-binomial-heaps-101.html">Dependent types in Haskell: Binomial heaps 101&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Who put binary numbers in my type system? This post makes a bit of a departure from the “practical Haskell” I usually try to write about, although — believe it or not — this blogpost actually originated from a very practical origin.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://summer.haskell.org/news/2018-09-01-final-results.html">Haskell.org GSoC results for 2018&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Google Summer of Code 2018 is officially over. The Haskell.org organisation had a very productive year with 17 accepted projects out of which 15 were successful. We would like to thank the students and mentors for the great summer, and, of course, Google for its generous support towards the open source community.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://lispcast.com/how-can-you-work-with-a-json-value-if-you-know-nothing-about-it/">How can you work with a JSON value if you know nothing about it?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The question is rhetorical. Of course you can’t do anything if you know nothing about it. But we do know a ton! We just can’t (or it’s very difficult to) encode what we know as a type.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-works.github.io/posts/2018-09-03-simd-with-linecount.html">Introduction to SIMD with line count&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In a previous post I talked about using broadword techniques to create a rank-select bit-string from text. This post will explore using Single Instruction, Multiple Data (SIMD) instructions to achieve the same thing.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.arcadianvisions.com/blog/2018/org-nix-direnv.html">Robust notes with embedded code&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Emacs’s org-mode has great facilities for working with source code, often referred to by the name Org Babel. A simple use is having source code from various languages embedded in a single text file that is otherwise occupied with talking about that code.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://szibele.com/stakpak-flatpak-a-haskell-stack-app-into-flathub/">Stackpak: Flatpak a Haskell Stack app into Flathub&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>After reading David Lettier’s great post on how to Flatpak a Haskell app into Flathub, I thought about generalizing his approach for Haskell Stack projects and have written Stackpak.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://argumatronic.com/posts/2018-09-02-effective-metaphor.html">The unreasonable effectiveness of metaphor&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I often find myself very frustrated by the way programmers talk about metaphor, so I chose a topic that would let me give an entirely different view of metaphors — metaphors the way linguists and cognitive scientists talk about them, metaphors as the crucial backbone of everyday thought and abstractions in mathematics and elsewhere.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://typeclasses.com/news/2018-09-text-and-bytestring">The various forms of &lt;code>Text&lt;/code> and &lt;code>ByteString&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This topic isn’t a tremendously complicated, but it can be difficult because it is rather tedious. I remember it as a source of endless frustration when I was first learning Haskell: Why so many strings?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://mpowered.co.za/jobs/">Senior Haskell developer at Mpowered&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Join a small team of specialists working on refactoring an enterprise application from its Ruby on Rails origins to a future of type safety and extensibility built on Haskell.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dhall-lang/dhall-lang/blob/915a8fad25e94bb2d6dcaa020165366123d5138b/CHANGELOG.md#v200">Announce: Dhall 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/kowainik/summoner/blob/b47535a7473337fa736c8e206a06635cc83b0284/CHANGELOG.md#110">Announce: Summoner 1.1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/stepchowfun/effects/tree/08460a8ef4ddfe5d8a6a94b4f01a70506850505b">Effects: A brief exploration of the various approaches to modeling side effects&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/8/20/making-the-jump-ii-using-more-monads">Making the jump 2: Using more monads&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/9bveu0/monthly_hask_anything_september_2018/">Monthly Hask Anything&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/9cyzzb/must_readfavourite_functional_pearls/">Must read/favourite functional pearls&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/minad/paripari/tree/18069fe868a187dfac855f3316d95ade3e43779b">PariPari: Fast parser combinator library for Haskell&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://domenkozar.com/2018/09/04/recent-cachix-downtime/">Recent Cachix downtime&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.ploeh.dk/2018/09/03/the-identity-functor/">The identity functor&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/typelead/eta/issues/869">Tool to convert Java code to Eta code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chrispenner.ca/posts/update-monad">Update monads: Variation on state monads&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/9bxbwp/which_ide_are_you_using_for_hakell/">Which IDE are you using for Hakell?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.plover.com/2018/09/03/">Why I never finish my Haskell programs (part 1 of ∞)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Packages of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://hackage.haskell.org/package/megaparsec-7.0.0">Megaparsec&lt;/a>,
an industrial-strength monadic parser combinator library.
It is feature-rich and strikes a nice balance between speed, flexibility, and quality of parse errors.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/AllureOfTheStars/Allure/issues/84">Allure: Define more animals, especially aquatic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/aviaviavi/curl-runnings/issues/34">curl-runnings: Index previous test cases by name&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/lorepub/moot/issues/106">moot: Conference organizers should be able to edit and preview their welcome message&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>2018-09-05 in Austin, TX, USA by Austin Haskell Users Group: &lt;a href="https://www.meetup.com/ATX-Haskell/events/253982973/">Haskell Beginner-Friendly Lab&lt;/a>&lt;/li>
&lt;li>2018-09-05 in Gainesville, FL, USA by Gainesville functional programming: &lt;a href="https://www.meetup.com/gnv-fp/events/254237304/">Elm &amp;amp; CSS: Fun, bad decisions&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Raleigh, NC, USA by Raleigh Haskell Meetup: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/254285240/">(hack . yack)&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Durham, NC, USA by Durham Haskell Meetup: &lt;a href="https://www.meetup.com/Durham-Haskell-Meetup/events/253871673/">Morning Haskell (and Rust!) coding session&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Manchester, United Kingdom by Manchester Haskell Group (MHG): &lt;a href="https://www.meetup.com/meetup-group-tHZJZdOn/events/253446773/">Coding Session&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Graz, Austria by Functional Programming Graz: &lt;a href="https://www.meetup.com/Functional-Programming-Graz/events/253642451/">Functional Programming Meetup&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Santiago, Chile by Santiago Scala Meetup: &lt;a href="https://www.meetup.com/Santiago-Scala-Meetup/events/251529088/">Santiago Scala Meetup&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Las Vegas, NV, USA by Las Vegas Functional Programming User Group: &lt;a href="https://www.meetup.com/las-vegas-functional-programming/events/254057505/">Functional Programming Meetup&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Singapore, Singapore by HASKELL.SG: &lt;a href="https://www.meetup.com/HASKELL-SG/events/254343021/">September Haskell Meetup&lt;/a>&lt;/li>
&lt;li>2018-09-06 in Hamburg, Germany by Lambda Pi: &lt;a href="https://www.meetup.com/Lambda-Pi/events/253946839/">Theorems for Free @ Mesosphere&lt;/a>&lt;/li>
&lt;li>2018-09-08 in Chilliwack, BC, Canada by ChilliHask Haskell User Group: &lt;a href="https://www.meetup.com/BC-HUG/events/254336872/">Weekly Haskell Coding Meetup&lt;/a>&lt;/li>
&lt;li>2018-09-08 in Norcross, GA, USA by Atlanta Functional Programming Meetup: &lt;a href="https://www.meetup.com/Atlanta-Functional-Programming-Meetup/events/253503047/">Norcross Haskathon&lt;/a>&lt;/li>
&lt;li>2018-09-08 in Boston, MA, USA by Weekly Functional Programming Meetup: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005378/">Hang out, chat FP, work on some code&lt;/a>&lt;/li>
&lt;li>2018-09-09 in Bangalore, India by Bangalore Functional Programmers Meetup: &lt;a href="https://www.meetup.com/Bangalore-Functional-Programmers-Meetup/events/253702838/">Monads in Haskell&lt;/a>&lt;/li>
&lt;li>2018-09-10 in Irvine, CA by Orange Combinator - Functional Programming In OC: &lt;a href="https://www.meetup.com/orange-combinator/events/254401625/">Combinating - The Weekly Function&lt;/a>&lt;/li>
&lt;li>2018-09-10 in Portland, OR, USA by Portland Functional Programming Study Group: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/254031750/">PDX Func Practice Track - Parallel and Concurrent Programming in Haskell&lt;/a>&lt;/li>
&lt;li>2018-09-10 in Pittsburgh, PA, USA by Pittsburgh Functional Programming Meetup: &lt;a href="https://www.meetup.com/Pittsburgh-Functional-Programming-Meetup/events/253797618/">Shell Scripting in Haskell&lt;/a>&lt;/li>
&lt;li>2018-09-10 in Sandton, South Africa by Lambda Luminaries: &lt;a href="https://www.meetup.com/lambda-luminaries/events/251751343/">Purely Functional Personal Finance with hledger&lt;/a>&lt;/li>
&lt;li>2018-09-11 in Santa Monica, CA, USA by Santa Monica Haskell Users Group: &lt;a href="https://www.meetup.com/santa-monica-haskell/events/254419787/">Haskell Study Group: Typeclasses&lt;/a>&lt;/li>
&lt;li>2018-09-11 in Amsterdam, Netherlands by FP AMS: &lt;a href="https://www.meetup.com/fp-ams/events/253592494/">Haskell Study Group #3&lt;/a>&lt;/li>
&lt;li>2018-09-12 in Berkeley, CA by East Bay Functional Programming Study Group: &lt;a href="https://www.meetup.com/eastbayfunctionalprogramming/events/254338424/">Open Programming Session (Wednesday)&lt;/a>&lt;/li>
&lt;li>2018-09-12 in Portland, OR, USA by Portland Functional Programming Study Group: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/254031795/">PDX Func Theory Track - Logic and Proof&lt;/a>&lt;/li>
&lt;li>2018-09-12 in Noida, India by Reactive Application Programmers in Delhi NCR: &lt;a href="https://www.meetup.com/Reactive-Application-Programmers-in-Delhi-NCR/events/254302140/">The Rise Of Scanamo: Async Access For DynamoDB In Scala&lt;/a>&lt;/li>
&lt;li>2018-09-12 in Cluj-Napoca, Romania by Cluj.fp: &lt;a href="https://www.meetup.com/Cluj-fp/events/253973807/">Akka actors: typed vs. untyped&lt;/a>&lt;/li>
&lt;li>2018-09-12 in Suite 1305, IL, USA by Chicago Haskell: &lt;a href="https://www.meetup.com/Chicago-Haskell/events/254041321/">Hack Night&lt;/a>&lt;/li>
&lt;li>2018-09-12 in Montréal, QC, Canada by Lambda Montreal: &lt;a href="https://www.meetup.com/lambda-montreal/events/254173494/">Samuel Gélineau shows us how to “Write your own Functional Reactive Library”&lt;/a>&lt;/li>
&lt;li>2018-09-19 in Vancouver, Canada by VanFP: &lt;a href="https://www.meetup.com/Vancouver-Functional-Programmers/events/pzvcfqyxmbqb/">Vancouver’s Haskell Book Workshop&lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>
<item>
  <guid>https://haskellweekly.news/issues/122.html</guid>
  <title>Issue 122</title>
  <link>https://haskellweekly.news/issues/122.html</link>
  <pubDate>Thu, 30 Aug 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://henningtonko.github.io./3D-Projection-In-Haskell/">3D projection in Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I recently watched a video from The Coding Train on 3D rendering with rotation and projection. It was written in JavaScript using the &lt;code>p5&lt;/code> library, and showed how to draw 3D graphics using a 2D graphics library. It got me wondering if I could recreate it in Haskell.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-works.github.io/posts/2018-08-22-pdep-and-pext-bit-manipulation-functions.html">Bit-manipulation operations for high-performance succinct data-structures and CSV parsing&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this blog post I will properly introduce the &lt;code>popcnt&lt;/code>, &lt;code>pext&lt;/code>, &lt;code>tzcnt&lt;/code> and &lt;code>pdep&lt;/code> operations and how they relate to the performance of our conceptual succinct data-structure based CSV parser.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://qnikst.github.io/posts/2018-08-23-ht-no-more.html">Marrying Haskell and hyper-threading&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this blog post, I’d like to tell one story that had happened with one Haskell application. Then explain how we can start threaded RTS, so it is aware of the CPU layout on your system.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://markkarpov.com/post/megaparsec-7.html">Megaparsec 7&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The post is about the most obvious things a user will run into when upgrading. Thus, we will talk about breaking changes and new ways of doing certain things. Finally, there a bit of benchmarking bravura, because yes, we’re now faster than ever (sometimes a bit faster than Attoparsec).&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/rpeszek/IdrisTddNotes/wiki/Home/f0bc51f3868dedee3d6cdbeee3a89f1e411d6711">Notes from reading &lt;em>Type Driven Development with Idris&lt;/em>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>These notes compare Idris code in the book against Haskell. My goal is to write Haskell code very closely mimicking Idris to see the value added by dependent types.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://oleg.fi/gists/posts/2018-08-29-agda-termination-checker.html">Notes on Agda’s termination checker&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’m positively surprised about Agda’s termination checker. I’m working on a larger exercise, and Agda believes my main lemma (which does all the work for one liner theorem) terminates. But I don’t, yet.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hexagoxel.de/postsforpublish/posts/2018-08-25-ghc-pkg-env-misfeature.html">Package environment files run counter to reproducibility&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The “package environment file” feature (silently) introduced into GHC and cabal-install has caused a good deal of discussion already. But it seems we have so far missed one more fundamental issue.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mmhaskell.com/blog/2018/8/27/taking-a-look-back-my-mistakes-in-learning-haskell">Taking a look back: My mistakes in learning Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The course starts next week. But before it does, I wanted to take this opportunity to tell a little bit of the story of how I learned Haskell. I want to share the mistakes I made, since those motivated me to make this course.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://speakerdeck.com/konn/the-great-power-of-newtypes">The great power of &lt;code>newtype&lt;/code>s&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Roles, safe zero-cost coercions, and &lt;code>DerivingVia&lt;/code> (&lt;code>Monoid&lt;/code> and &lt;code>Foldable&lt;/code> included)&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://qiita.com/kimagure/items/93a42d67a8833f99fe2e">What I’ve learned since quitting Elm&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In 2015, I spent some of my spare time trying out Elm, to render something simple in the browser and also to run some programs in Node. In this post, I’ll just highlight some of the most important things I’ve learned since the beginning of 2016 by using PureScript.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://jobs.lever.co/awake-security/fb9cb1c6-bda8-45d9-ba4b-6d7fb1c41fdc">Senior User Interface Developer at Awake Security in Sunnyvale, California&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We are an early stage startup with a newly released product that is growing and changing as we continue gathering more customer feedback. Our small team of extremely talented and friendly folks is working closely with customers to ensure their success.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.eta-lang.org/announcing-eta-v0-8-6b2-df0398272089">Announcing Eta v0.8.6b2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cs-syd.eu/posts/2018-08-28-genvalidity-hspec-optics">Announcing &lt;code>genvalidity-hspec-optics&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.eta-lang.org/eta-gsoc-2018-wrap-up-fe55426580c2">Eta GSoC 2018 wrap up&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fpcomplete.com/blog/2018/08/haskell-development-workflows-4-ways">Haskell development workflows 4 ways&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=NcUNN_tSmyE">HaskellRank 7: Purely functional solutions to imperative problems&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.snoyman.com/blog/2018/08/kids-coding-part-3">Kids coding: Part 3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://liamgoodacre.github.io/purescript/instance/chain/2017/08/18/purescript-instance-chain.html">PureScript: Instance chains and overlapping Instances&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@maiavictor/the-abstract-calculus-fe8c46bcf39c">The abstract calculus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/9abjn3/whats_the_consensus_on_unicode_symbols_these_days/">What’s the consensus on Unicode symbols these days?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Packages of the week&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/MaiaVictor/abstract-calculus/tree/1b7f25e529deb2fc3b1f2429a566c5c15eada0a8">Abstract Calculus: A minimal programming language and model of computation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Ninjacop/BuBBLE/tree/52b1498f9e61299605c5aaee63f77a54b0f8661e">BuBBLE: A DSL/LISP dialect written&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sergv/emacs-module/tree/cee3dff20f6860904688fe90d8f897e9783f39b7">&lt;code>emacs-module&lt;/code>: A Haskell package for writing Emacs modules&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/lucasdicioccio/http2-client-grpc/tree/3f41c70a94f4d0c8aadd380c770f76b88bc1c1a3">&lt;code>http2-client-grpc&lt;/code>: A native HTTP2 gRPC client library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/shivansh/kiwi/tree/dbef19778ffaf26f3f2eb37c13f6896262aa4ede">Kiwi: A B+ tree based persistent key-value store&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cdepillabout/termonad/tree/cb7ba74140ca2aeb5c3d78642ea27602cc86ee6f">Termonad: A terminal emulator configurable&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bitbucket.org/sras/yaar/src/cdb544b6c77f">Yaar: An experimental type level framework for bulding type safe web applications&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/arow-oss/goat-guardian/issues/25">goat-guardian: get rid of &lt;code>--redir-after-login-url&lt;/code> command line flag and instead use a URL parameter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/4256">stack: Make &lt;code>snapshot:&lt;/code> a synonym for &lt;code>resolver:&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cdepillabout/termonad/issues/14">termonad: Make sure that the example .config/termonad/termonad.hs file in the README actually compiles&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>2018-08-29 in Quito, Ecuador by Quito Lambda: &lt;a href="https://www.meetup.com/Quito-Lambda-Meetup/events/252000157/">Clasificando algoritmos recursivos&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Durham, NC, USA by Durham Haskell Meetup: &lt;a href="https://www.meetup.com/Durham-Haskell-Meetup/events/254069628/">Morning Haskell coding session&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Raleigh, NC, USA by Raleigh Haskell Meetup: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/254081840/">(hack . yack)&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Seattle, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253049820/">Category Theory for Programmers Part 3&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Melbourne, Australia by Melbourne Haskell Users Group: &lt;a href="https://www.meetup.com/Melbourne-Haskell-Users-Group/events/253165388/">Decomposing - MHUG&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Zürich, Switzerland by HaskellerZ: &lt;a href="https://www.meetup.com/HaskellerZ/events/253928652/">Bring Your Own Coding Problem #3&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Sheung Wan, Hong Kong by Hong Kong Functional Programming: &lt;a href="https://www.meetup.com/HK-Functional-programming/events/251735985/">Fractalide&lt;/a>&lt;/li>
&lt;li>2018-09-01 in Chilliwack, BC, Canada by ChilliHask Haskell User Group: &lt;a href="https://www.meetup.com/BC-HUG/events/254128782/">Weekly Haskell Coding Meetup&lt;/a>&lt;/li>
&lt;li>2018-09-01 in Boston, MA, USA by Weekly Functional Programming Meetup: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005377/">Hang out, chat FP, work on some code&lt;/a>&lt;/li>
&lt;li>2018-09-03 in Irvine, CA by Orange Combinator - Functional Programming In OC: &lt;a href="https://www.meetup.com/orange-combinator/events/254198548/">Combinating - The Weekly Function&lt;/a>&lt;/li>
&lt;li>2018-09-03 in Portland, OR, USA by Portland Functional Programming Study Group: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/254031750/">PDX Func Practice Track - Parallel and Concurrent Programming in Haskell&lt;/a>&lt;/li>
&lt;li>2018-09-03 in Sydney, Australia by Sydney Type Theory: &lt;a href="https://www.meetup.com/Sydney-Type-Theory/events/253806103/">Separation logic&lt;/a>&lt;/li>
&lt;li>2018-09-03 in Melbourne, Australia by Elm Melbourne: &lt;a href="https://www.meetup.com/Elm-Melbourne/events/250594839/">Elm hack night&lt;/a>&lt;/li>
&lt;li>2018-09-04 in Madison, WI, USA by Haskallywags: &lt;a href="https://www.meetup.com/Haskallywags/events/253958861/">ReasonML &amp;amp; ReasonReact: X Marks the Spot&lt;/a>&lt;/li>
&lt;li>2018-09-04 in New Orleans, USA by NoFUN - New Orleans Functional Programming: &lt;a href="https://www.meetup.com/no-fun/events/253684597/">Spark Catalyst: A Functional Query Optimization Engine&lt;/a>&lt;/li>
&lt;li>2018-09-04 in Bristol, United Kingdom by CodeHub Bristol: &lt;a href="https://www.meetup.com/CodeHub-Bristol/events/253090601/">Hack Night + Haskell Study Group&lt;/a>&lt;/li>
&lt;li>2018-09-04 in Amsterdam, Netherlands by FP AMS: &lt;a href="https://www.meetup.com/fp-ams/events/252164249/">Category theory study group&lt;/a>&lt;/li>
&lt;li>2018-09-05 in Austin, TX, USA by Austin Haskell Users Group: &lt;a href="https://www.meetup.com/ATX-Haskell/events/253982973/">Haskell Beginner-Friendly Lab&lt;/a>&lt;/li>
&lt;li>2018-09-05 in Berlin, Germany by Berlin Haskell Users Group: &lt;a href="https://www.meetup.com/berlinhug/events/253724678/">Haskell Wednesday&lt;/a>&lt;/li>
&lt;li>2018-09-05 in Seattle, WA, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253558584/">Haskell Learners’ Group&lt;/a>&lt;/li>
&lt;li>2018-09-05 in Budapest, Hungary by Budapest Haskell User Group: &lt;a href="https://www.meetup.com/Bp-HUG/events/252664363/">Haskell Book reading group (22th Ed. with Revisions)&lt;/a>&lt;/li>
&lt;li>2018-09-05 in London, ON, Canada by London Functional Programmers (LFP): &lt;a href="https://www.meetup.com/London-Functional-Programmers/events/253877171/">Destroy All “If”s: An Intro to Declarative Programming&lt;/a>&lt;/li>
&lt;li>2018-09-05 in Chicago, IL, USA by Chicago Elm: &lt;a href="https://www.meetup.com/chicago-elm/events/254146691/">Chicago Elm - September Code Night&lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>
<item>
  <guid>https://haskellweekly.news/issues/121.html</guid>
  <title>Issue 121</title>
  <link>https://haskellweekly.news/issues/121.html</link>
  <pubDate>Thu, 23 Aug 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://mail.haskell.org/pipermail/ghc-devs/2018-August/016120.html">Goals for GHC 8.8&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Since GHC 8.6 is almost released it’s time to start thinking about our goals for 8.8, which will branch in November. I have added the items that I know are in-flight to the 8.8 status page. If you have a project that you would like to see present in 8.8 then please do add it as well.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.eta-lang.org/https-blog-eta-lang-org-announcing-eta-v0-8-6-e8b63c92c6ca">Announcing Eta v0.8.6&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Featuring reproducible builds, &lt;code>base-4.11.1.0&lt;/code>, and Backpack. The Eta team is happy to announce a new version of Eta — v0.8.6! Etlas v1.5.0 is also released and is required to use the newer features.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://elm-lang.org/blog/small-assets-without-the-headache">Small assets without the headache: Minification made easy with Elm 0.19&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I am excited to finally share this release publicly! I hope it will help you out, whether you are learning your first programming language or on your way to 300k lines of code at work. As folks with 50k+ lines upgrade to Elm 0.19, I encourage you to share your new asset sizes and compile times.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://joyofhaskell.com/posts/2018-08-06-announcement.html">The Joy of Haskell: What is happening&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Lately, we’ve been looking at all we have to write — the partially finished parts as well as the bare stubs populating the book repository and have made a decision: Joy of Haskell is properly two books, not one.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mmhaskell.com/blog/2018/8/20/announcing-haskell-from-scratch-beginners-course">Announcing Haskell From Scratch beginners course&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This week we have a huge announcement we’ve been working towards for a long time. One of the main goals of this blog has been to create content to make it easy for newcomers to learn Haskell. We’ve now reached the culmination of that goal with our brand new Haskell From Scratch course.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.rcook.org/blog/2018/ghci-custom-key-bindings/">GHCi custom key bindings&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I want to bind keyboard shortcuts to GHCi commands. GHCi makes use of the Haskeline package for performing line input. As an example, I’m going to show you how to bind &lt;code>F7&lt;/code> to the GHCi &lt;code>:reload&lt;/code> command.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ajknapp.github.io/2018/08/14/notomatic-differentiation.html">Not-o-matic differentiation&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This summer, I worked on a Google Summer of Code project intended to implement automatic differentiation for Haskell’s accelerate vector programming EDSL, using a new method of automatic differentiation.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://typedr.at/posts/what-i-did-on-my-summer-vacation/">What I did on my summer vacation&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This year, I took part in Google Summer of Code, with a project to attempt to finish bringing Cabal;s Nix-style local builds (the &lt;code>new-&lt;/code> commands, at least for now) up to parity with the old stateful methodology of using &lt;code>cabal-install&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hub.zhox.com/posts/why-doesnt-ghc-on-windows-find-my-dll/">Why doesn’t GHCi on Windows find my DLL&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Why is GHCi looking for &lt;code>my-cool-library.dll&lt;/code> instead of &lt;code>my-cool-library-7.dll&lt;/code>. You rename the file and things &lt;em>seem&lt;/em> to work. This is actually quite dangerous and wrong. Unfortunately this is also often suggested as what to do.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;p>Are you looking to hire a Haskell developer?
You should &lt;a href="/advertising.html">advertise with us&lt;/a>!&lt;/p>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://www.cse.chalmers.se/%7Ealgehed/blogpostsHTML/SAT.html">A very small SAT solver&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://nmattia.com/posts/2018-08-21-cio-cached-http-requests-jupyter.html">&lt;code>cio&lt;/code>: Cached HTTP requests for a smooth Jupyter experience&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/skinney/elm-019-brings-better-collections-3320">Elm 0.19 brings better collections&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://functor.tokyo/blog/2018-08-21-machine-learning-for-haskellers">How to get into machine learning for a Haskeller&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nazarii.bardiuk.com/posts/hakyll-circle.html">How to Hakyll CircleCI 2.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shiftordie.de/blog/2018/08/17/how-to-transform-camels-purescript-haskell/">How to turn a Dromedary camel into a Bactrian camel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://julesh.com/2018/08/16/lenses-for-philosophers/">Lenses for philosophers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kowainik.github.io/posts/2018-08-19-picnic-put-containers-into-a-backpack">Picnic: Put containers into a backpack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tzemanovic.gitlab.io/posts/realworld-example-with-haskell-yesod/">RealWorld example with Haskell Yesod&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@maiavictor/solving-the-mystery-behind-abstract-algorithms-magical-optimizations-144225164b07">Solving the mystery behind the abstract algorithm’s magical optimizations&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://functional.works-hub.com/learn/water-jug-rewrite-with-haskell-part-i-4347a">Water jug rewrite with Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://hackage.haskell.org/package/bins-0.1.1.0">Bins&lt;/a>,
a library that bins continuous values into discrete containers in an interval, useful for histograms.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ndmitchell/ghcid/issues/196">ghcid: –verbose should print out the version number&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/4252">stack: Update GUIDE.md doc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>2018-08-23 in Durham, NC, USA by Durham Haskell Meetup: &lt;a href="https://www.meetup.com/Durham-Haskell-Meetup/events/253873255/">Morning Haskell coding session&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Raleigh, NC, USA by Raleigh Haskell Meetup: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/253464598/">(hack . yack)&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Las Vegas, NV, USA by Las Vegas Functional Programming User Group: &lt;a href="https://www.meetup.com/las-vegas-functional-programming/events/253697701/">Functional Programming Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Denver, CO, USA by DenverFP: &lt;a href="https://www.meetup.com/denverfp/events/253873586/">Property-Based Testing with QuickCheck&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Seattle, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253049816/">Category Theory for Programmers Part 3&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Eindhoven, Netherlands by Eindhoven Haskell Meetup: &lt;a href="https://www.meetup.com/Eindhoven-Haskell-Meetup/events/253298183/">Let’s code a sea battle game!&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Gdańsk, Poland by Functional Tricity: &lt;a href="https://www.meetup.com/FunctionalTricity/events/253124688/">Join our new HQ - Functional Tricity #13 &lt;/a>&lt;/li>
&lt;li>2018-08-24 in Austin, TX, USA by Austin Types, Theorems, and Programming Languages: &lt;a href="https://www.meetup.com/Austin-Types-Theorems-and-Programming-Languages/events/251802771/">Going through Software Foundations by Benjamin Pierce et al&lt;/a>&lt;/li>
&lt;li>2018-08-25 in Chilliwack, BC, Canada by ChilliHask Haskell User Group: &lt;a href="https://www.meetup.com/BC-HUG/events/253933076/">Weekly Haskell Coding Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-25 in San Diego , CA, USA by San Diego Software Development Deep Dive: &lt;a href="https://www.meetup.com/San-Diego-Software-Development-Deep-Dive/events/253743545/">Diving deeper into software development discussions &lt;/a>&lt;/li>
&lt;li>2018-08-25 in Boston, MA, USA by Weekly Functional Programming Meetup: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005374/">Hang out, chat FP, work on some code&lt;/a>&lt;/li>
&lt;li>2018-08-25 in Bangalore, India by Papers we love, Bangalore: &lt;a href="https://www.meetup.com/Papers-we-love-Bangalore/events/253785300/">A tutorial on the universality and expressiveness of fold&lt;/a>&lt;/li>
&lt;li>2018-08-27 in Irvine, CA by Orange Combinator - Functional Programming In OC: &lt;a href="https://www.meetup.com/orange-combinator/events/253997890/">Combinating - The Weekly Function&lt;/a>&lt;/li>
&lt;li>2018-08-27 in Sydney, Australia by Sydney Type Theory: &lt;a href="https://www.meetup.com/Sydney-Type-Theory/events/253329644/">Separation logic&lt;/a>&lt;/li>
&lt;li>2018-08-27 in Plano, TX, USA by Dallas Functional Programmers: &lt;a href="https://www.meetup.com/Dallas-Functional-Programmers/events/253267414/">Generative Art with Elm&lt;/a>&lt;/li>
&lt;li>2018-08-27 in Melbourne, Australia by Melbourne Haskell Users Group: &lt;a href="https://www.meetup.com/Melbourne-Haskell-Users-Group/events/253742874/">Compose :: Melbourne 2018&lt;/a>&lt;/li>
&lt;li>2018-08-28 in Santa Monica, CA, USA by Santa Monica Haskell Users Group: &lt;a href="https://www.meetup.com/santa-monica-haskell/events/253816697/">Haskell Study Group: Parametric Polymorphism&lt;/a>&lt;/li>
&lt;li>2018-08-28 in Auckland, New Zealand by Functional Programming Auckland: &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/events/253832786/">Learn Haskell Hands-on&lt;/a>&lt;/li>
&lt;li>2018-08-28 in Copenhagen, Denmark by Mødegruppe for F#unktionelle Københavnere: &lt;a href="https://www.meetup.com/MoedegruppeFunktionelleKoebenhavnere/events/252866347/">[hands-on] We will solve random exercises from HackerRank in FP languages&lt;/a>&lt;/li>
&lt;li>2018-08-28 in Ann Arbor, MI, USA by Ann Arbor Functional Programming User Group: &lt;a href="https://www.meetup.com/AnnArborFP/events/253729076/">A2FP – August Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-28 in San Francisco, CA, USA by Bay Area Haskell Users Group: &lt;a href="https://www.meetup.com/Bay-Area-Haskell-Users-Group/events/253256829/">Haskell Talks at SwiftNav&lt;/a>&lt;/li>
&lt;li>2018-08-29 in Gainesville, FL, USA by Gainesville functional programming: &lt;a href="https://www.meetup.com/gnv-fp/events/253559085/">August meetup&lt;/a>&lt;/li>
&lt;li>2018-08-29 in Oslo, Norway by Osλo Haskell: &lt;a href="https://www.meetup.com/Oslo-Haskell/events/252501785/">Haskell in production at FINN.no&lt;/a>&lt;/li>
&lt;li>2018-08-29 in Quito, Ecuador by Quito Lambda: &lt;a href="https://www.meetup.com/Quito-Lambda-Meetup/events/252000157/">Clasificando algoritmos recursivos&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Seattle, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253049820/">Category Theory for Programmers Part 3&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Melbourne, Australia by Melbourne Haskell Users Group: &lt;a href="https://www.meetup.com/Melbourne-Haskell-Users-Group/events/253165388/">Melbourne Haskell Users Group Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Zürich, Switzerland by HaskellerZ: &lt;a href="https://www.meetup.com/HaskellerZ/events/253928652/">Bring Your Own Coding Problem #3&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Chicago, IL, USA by The Project Euler Sprint: &lt;a href="https://www.meetup.com/Project-Euler-Sprint/events/253309381/">Project Euler Sprint&lt;/a>&lt;/li>
&lt;li>2018-08-30 in Sheung Wan, Hong Kong by Hong Kong Functional Programming: &lt;a href="https://www.meetup.com/HK-Functional-programming/events/251735985/">Fractalide&lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>
<item>
  <guid>https://haskellweekly.news/issues/120.html</guid>
  <title>Issue 120</title>
  <link>https://haskellweekly.news/issues/120.html</link>
  <pubDate>Thu, 16 Aug 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@krystal.maughan/breaking-the-space-time-barrier-with-haskell-time-traveling-and-debugging-in-codeworld-a-google-e87894dd43d7">Breaking the space-time barrier with Haskell: Time-traveling and debugging in CodeWorld&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This summer, as part of Google Summer of Code, I created debugging tools to be used by students programming in the CodeWorld environment. As a current learner of Haskell and of CodeWorld, I believe tools that help users reason about logic are very useful. I wanted to help users identify breaks in logic, and reason about mathematics and code.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.gagandeepbhatia.com/blog/gsoc-2018-wrap-up-haskell-dataframes-postgres-type-providers-and-more/">GSoC 2018 wrap-up: Haskell dataframes, Postgres type providers and more&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Frames-beam is the library I worked on during Google Summer of Code 2018 as part of the Haskell.org open source organization. It is primarily intended as a extension to the Frames library, and adds Postgres as an additional data source to it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://sjakobi.github.io/blog/2018/08/14/hi-haddock-3/">Hi Haddock: Google Summer of Code is over&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>While the Google Summer of Code ends today, my work on Hi Haddock hasn’t finished yet. Initially I had some pretty good progress: A preview version of the GHCi &lt;code>:doc&lt;/code> command made it into GHC 8.6. Closing this 10 year old GHC ticket felt great!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@khilanravani/image-processing-gsoc18-with-haskell-84177cec618">Image processing: GSoC’18 with Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This summer, I worked towards implementing different classes of image processing algorithms using Haskell and incorporating the same to the existing code base of Haskell Image Processing (HIP) package to enhance its scope.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://lukelau.me/haskell/posts/lsp-test/">&lt;code>lsp-test&lt;/code>: A functional test framework for LSP servers&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>My Haskell Summer of Code project, &lt;code>lsp-test&lt;/code>, is now available via Hackage. It’s a framework for writing end-to-end tests for LSP servers, made for testing &lt;code>haskell-ide-engine&lt;/code>. But it’s not just limited to &lt;code>haskell-ide-engine&lt;/code>: It’s language agnostic and works with any server that conforms to the Language Server Protocol.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3">Enable all the warnings&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The compiler by default enables 18 warnings, and you can enroll in an additional 8 with &lt;code>-Wextra&lt;/code>, and even more with &lt;code>-Wall&lt;/code>. You’ve probably seen packages compiling with &lt;code>-Wall&lt;/code>, but did you know that &lt;code>-Wall&lt;/code> doesn’t enable all of GHC’s warnings?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://abhinavsarkar.net/posts/fast-sudoku-solver-in-haskell-3/">Fast Sudoku solver in Haskell #3: Picking the right data structures&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In the previous part in this series of posts, we optimized the simple Sudoku solver by implementing a new strategy to prune cells, and were able to achieve a speedup of almost 200x. In this post, we are going to follow the profiler and use the right data structures to improve the solution further and make it faster.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://cvlad.info/haskell/">My Haskell journey from C#&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I became a strong believer in FP, in strong typing, and in compilers guiding me through programming. I strongly believe that any programmer can benefit from learning Haskell. Even though I am still relatively new in this journey, I consider myself a better programmer than I was when I started this journey.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-works.github.io/posts/2018-08-15-data-parallel-rfc-compliant-csv-parsing.html">RFC compliant data-parallel CSV parsing&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In last week’s post I described how to exploit data-parallelism to build a rank-select bit-string for a cut compatible delimeter-separated-values format, parsing 8-bytes at-a-time. In this post we will look at how to do the same for the CSV format described in RFC4180.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://chrispenner.ca/posts/typesafe-api-versioning">Typesafe versioned APIs&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We’re going to look at a fun way to write a monadic action which alters its behaviour based on which version of a system it’s embedded in, simultaneously gaining ground on the expression problem and giving us compile-time guarantees that we haven’t accidentally mixed up code from different versions of our app!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;p>If you’re interested in a Haskell job,
look no futher than &lt;a href="https://www.reddit.com/r/haskell/comments/972io6/whos_hiring/">the who’s hiring thread&lt;/a> from the Haskell subreddit!
There are no fewer than 9 companies hiring Haskellers right now.&lt;/p>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mail.haskell.org/pipermail/ghc-devs/2018-August/016098.html">GHC 8.6.1-beta1 available&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.philipzucker.com/approximating-compiling-categories-using-typelevel-haskell-take-2/">Approximating compiling to categories using type-level Haskell: Take 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.vmchale.com/article/curry-uncurry">&lt;code>curry&lt;/code> vs &lt;code>uncurry&lt;/code> on Hackage&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://functional.works-hub.com/learn/functor-applicative-and-why-3c5b3">Functor, Applicative, and why&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://damianfral.github.io/ghcaniuse/">GHCanIUse&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ocharles/hlint-source-plugin/tree/d4cded0a7432dc2d5884b9bedd2c714ce510d3ce">&lt;code>hlint-source-plugin&lt;/code>: Run HLint as part of normal compilation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/8/13/series-spotlight-haskell-web-skills">Series spotlight: Haskell web skills&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mpickering.github.io/posts/2018-08-10-plugins-recompilation.html">Specifying how a plugin affects recompilation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://typeclasses.com/news/2018-08-web-servers-course">Type Classes: Web servers course&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mzabani.github.io/posts/2018-08-13.html">Typeclass induction and developing a QuickCheck-like library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@zw3rk/what-is-new-in-cross-compiling-haskell-77c348f79ad5">What is new in cross compiling Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://github.com/GaloisInc/grift/tree/757b5c2dc46f951fd44522a675790d51ee094125">GRIFT&lt;/a>,
the Galois RISC-V Formal Tools.
It contains a concrete representation of the semantics of the RISC-V instruction set, along with an elegant encoding/decoding mechanism, and simulation and analysis front-ends.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/exercism/haskell/issues/708">exercism/haskell: Replace existing hello world and quicksort snippets&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/arow-oss/goat-guardian/issues/22">goat-guardian: make sure email-login verification emails actually expire&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/hasktorch/hasktorch/issues/108">hasktorch: reference to -1 Word should be &lt;code>subtract 1&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>2018-08-16 in Durham, NC, USA by Durham Haskell Meetup: &lt;a href="https://www.meetup.com/Durham-Haskell-Meetup/events/253678976/">Morning Haskell coding session&lt;/a>&lt;/li>
&lt;li>2018-08-16 in Raleigh, NC, USA by Raleigh Haskell Meetup: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/253219863/">(hack . yack)&lt;/a>&lt;/li>
&lt;li>2018-08-16 in Seattle, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253049807/">Category Theory for Programmers Part 3&lt;/a>&lt;/li>
&lt;li>2018-08-18 in Chilliwack, BC, Canada by BC Haskell Users Group: &lt;a href="https://www.meetup.com/BC-HUG/events/253738520/">Weekly Haskell Coding Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-18 in Bellevue, WA, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253365278/">General discussion&lt;/a>&lt;/li>
&lt;li>2018-08-18 in Boston, MA, USA by Weekly Functional Programming Meetup: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005372/">Hang out, chat FP, work on some code&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Charlottesville, VA, USA by Charlottesville Haskell Book Reading Group: &lt;a href="https://www.meetup.com/Charlottesville-Haskell-Book-Reading-Group/events/253702681/">Chapter 17 - Applicative&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Irvine, CA by Orange Combinator - Functional Programming In OC: &lt;a href="https://www.meetup.com/orange-combinator/events/253804274/">Combinating - The Weekly Function&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Lehi, UT, USA by Utah Haskell: &lt;a href="https://www.meetup.com/utah-haskell/events/253166355/">Utah Haskell Meetup | Book Club&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Portland, OR, USA by Portland Functional Programming Study Group: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/253309551/">PDX Func Practice Track - Parallel and Concurrent Programming in Haskell&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Newcastle Upon Tyne, United Kingdom by FP North East: &lt;a href="https://www.meetup.com/FP-North-East/events/252893286/">Topic to be announced&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Perth, Australia by Perth Functional Programmers: &lt;a href="https://www.meetup.com/PerthFP/events/252829610/">Haskell study group&lt;/a>&lt;/li>
&lt;li>2018-08-20 in Bucharest, Romania by Bucharest FP: &lt;a href="https://www.meetup.com/bucharestfp/events/253609976/">Bucharest FP #32 — Composition in FP&lt;/a>&lt;/li>
&lt;li>2018-08-21 in Minneapolis, USA by HaskellMN: &lt;a href="https://www.meetup.com/HaskellMN/events/253098712/">HaskellMN Monthly Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-21 in Carmel, USA by Indy FP: &lt;a href="https://www.meetup.com/Indy-FP/events/253038877/">Don’t Write Tests, Generate Them&lt;/a>&lt;/li>
&lt;li>2018-08-21 in Cluj-Napoca, Romania by Cluj.fp: &lt;a href="https://www.meetup.com/Cluj-fp/events/252595802/">Verification of Blockchain Languages and VMs&lt;/a>&lt;/li>
&lt;li>2018-08-22 in Berlin, Germany by Berlin Haskell Users Group: &lt;a href="https://www.meetup.com/berlinhug/events/253747101/">Haskell Wednesday&lt;/a>&lt;/li>
&lt;li>2018-08-22 in Portland, OR, USA by Portland Functional Programming Study Group: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/253444017/">PDX Func Theory Track - Logic and Proof&lt;/a>&lt;/li>
&lt;li>2018-08-22 in Karlsruhe, Germany by Karlsruhe Haskell Lerngruppe: &lt;a href="https://www.meetup.com/Karlsruhe-Haskell-Lerngruppe/events/253262511/">Writing Fast Haskell by Moritz Kiefer&lt;/a>&lt;/li>
&lt;li>2018-08-22 in Delhi, India by DelhiNCR Haskell And Functional Programming Languages Group: &lt;a href="https://www.meetup.com/DelhiNCR-Haskell-And-Functional-Programming-Languages-Group/events/253444881/">FPNCR Unscripted Online meetup&lt;/a>&lt;/li>
&lt;li>2018-08-22 in Boulder, CO, USA by Front Range Elm: &lt;a href="https://www.meetup.com/Front-range-elm/events/251030263/">Haskell Servant&lt;/a>&lt;/li>
&lt;li>2018-08-22 in Quito, Ecuador by Quito Lambda: &lt;a href="https://www.meetup.com/Quito-Lambda-Meetup/events/252000157/">[Tema no definido por el momento]&lt;/a>&lt;/li>
&lt;li>2018-08-22 in London, United Kingdom by London Haskell: &lt;a href="https://www.meetup.com/London-Haskell/events/253674364/">Type Families: More than Lifted Functions&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Raleigh, NC, USA by Raleigh Haskell Meetup: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/253464598/">(hack . yack)&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Las Vegas, NV, USA by Las Vegas Functional Programming User Group: &lt;a href="https://www.meetup.com/las-vegas-functional-programming/events/253697701/">Functional Programming Meetup&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Seattle, USA by Seattle Area Haskell Users’ Group: &lt;a href="https://www.meetup.com/SEAHUG/events/253049816/">Category Theory for Programmers Part 3&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Eindhoven, Netherlands by Eindhoven Haskell Meetup: &lt;a href="https://www.meetup.com/Eindhoven-Haskell-Meetup/events/253298183/">Let’s code a sea battle game!&lt;/a>&lt;/li>
&lt;li>2018-08-23 in Gdańsk, Poland by Functional Tricity: &lt;a href="https://www.meetup.com/FunctionalTricity/events/253124688/">Join our new HQ - Functional Tricity #13 &lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>
<item>
  <guid>https://haskellweekly.news/issues/119.html</guid>
  <title>Issue 119</title>
  <link>https://haskellweekly.news/issues/119.html</link>
  <pubDate>Thu, 09 Aug 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://limperg.de/ghc-extensions/">A guide to GHC’s extensions&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The latest official version of the Haskell standard was published in 2010. Since then, GHC, the most popular Haskell compiler, has grown almost 100 extensions which modify the language, sometimes quite drastically.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-works.github.io/posts/2018-08-08-data-parallel-rank-select-bit-string-construction.html">Data-parallel rank-select bit-string construction&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this post, I demonstrate how use broadword programming techniques to exploit data-level parallelism in the parsing of a CSV-like format. Doing so allows us to parse the text 8-bytes at a time instead of one byte at a time as a traditional parser would.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.poisson.chat/posts/2018-08-06-one-type-family.html">Haskell with only one type family&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this post, we will implement open type families with a single actual type family. Surprisingly, this endeavor leads to increased expressivity: type families become first-class.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://sras.me/haskell/miscellaneous-enlightenments.html">Learning Haskell: Miscellaneous enlightenments&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The following are some of the so called “Aha!” moments I have experienced while learning Haskell. I am sharing them here so that it might help someone spare the hopeless frustration that precedes them.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://alternativebit.fr/posts/haskell/cabal-ghc-api/">Loading a Cabal module in the GHC API&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>While loading a simple module into GHC’s API is quite trivial and well documented, loading complex modules will require you to find the appropriate dynamic flags. These flags are usually retrieved and loaded into GHC by Cabal. Sadly for us, Cabal’s API does not seems to expose a direct way to get these flags.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://jappieklooster.nl/pragmatic-haskell-iii-beam-postgres-db.html">Pragmatic Haskell 3: Beam Postgres DB&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>No need to read a book to use Haskell! This post will get you going with a serious web application while only sticking to the concepts that are encountered. This is a Haskell safari with as end goal a working webapp with database.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/fuzzy-sharp/purescript-and-haskell-at-lumi-7e8e2b16fb13">PureScript and Haskell at Lumi&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Previously, I talked about how we were able to ensure correctness while successfully migrating our database from RethinkDB to Postgres by leaning heavily on Haskell. In this blog post, I’m going to tell a similar story about how we’re improving correctness on the front-end by moving from JavaScript to PureScript.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mpickering.github.io/posts/2018-08-09-source-plugin-graphmod.html">Reimplementing &lt;code>graphmod&lt;/code> as a source plugin: &lt;code>graphmod-plugin&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>You may have heard about source plugins by now. They allow you to modify and inspect the compiler’s intermediate representation. This is useful for extending GHC and performing static analysis of Haskell programs.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.patreon.com/posts/new-chapter-part-20563552">The Book of Types: New chapter: Dependent types part 1 and extra goodies&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’ve just uploaded the first part of working with dependent types in Haskell; it introduces the notions of singletons, walks through their derivation, and then shows how you can use the singletons package to get all of this stuff for free.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://steven741.github.io/posts/2018-07-28-haskell-tutorial-1.html">Why we need monads&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Monads are often a point of frustration for learners of Haskell. The question of what a monad is leads to the question of why a monad is. The question of why a monad is leads to the question of what a monad is.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;p>Are you looking to hire a Haskell developer?
You should &lt;a href="/advertising.html">advertise with us&lt;/a>!&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.reddit.com/r/haskell/comments/95osyd/fulltime_position_at_tesla_inc/">Software engineer at Tesla in Palo Alto&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This role provides a unique opportunity to leverage the strengths of Haskell in a production setting. A creative, well-rounded problem solver will be able to work on and invent a diverse array of high-visibility, interdisciplinary applications that directly improve Tesla products.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://jeremydormitzer.com/blog/a-dsl-for-music/">A DSL for music&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/r/haskell/comments/94rxip/feedback_request_on_poc_acidworld_a_potential/">&lt;code>acid-world&lt;/code>: A potential replacement for &lt;code>acid-state&lt;/code> focusing on flexibility and usability&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/chrisdone/47a9e22672b54dedc87dec8b415e8127/b21e7f0e0dea6c641cae698173f12689e8507edb">Email message parsing in Haskell in 2018&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ghc-proposals/ghc-proposals/pull/143">GHC proposal: Remove the &lt;code>*&lt;/code> kind syntax&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://apfelmus.nfshost.com/blog/2018/08/06-hyper-0-2.html">HyperHaskell: Release of version 0.2.1.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/8/6/keeping-it-clean-haskell-code-formatters">Keeping it clean: Haskell code formatters&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.plover.com/prog/haskell/fake-keyword.html">Using a one-element type as a pretend keyword&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://taskell.app">Taskell&lt;/a>,
a CLI kanban board/task manager for Mac and Linux.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/fizruk/http-api-data/issues/77">http-api-data: Add instances for Data.Fixed&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/purebred-mua/purebred/issues/195">purebred: Showing raw e-mail body&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;p>We’re doing things in this section a little differently starting with this issue.
You may notice a lot more events!
Hopefully that means you’ll be able to find some local Haskellers to meet up with.
Please let us know what you think about this change over &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io/issues/207">on GitHub&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Thursday, August 9: &lt;a href="https://www.meetup.com/Durham-Haskell-Meetup/events/253452186/">Morning Haskell coding session&lt;/a> hosted by &lt;a href="https://www.meetup.com/Durham-Haskell-Meetup/">Durham Haskell Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=36.013916015625&amp;amp;mlon=-78.92152404785156">Durham, nc, USA&lt;/a>&lt;/li>
&lt;li>Thursday, August 9: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/253466952/">(hack . yack)&lt;/a> hosted by &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/">Raleigh Haskell Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=35.77825927734375&amp;amp;mlon=-78.63912963867188">Raleigh, NC, USA&lt;/a>&lt;/li>
&lt;li>Thursday, August 9: &lt;a href="https://www.meetup.com/las-vegas-functional-programming/events/253192401/">Functional Programming Meetup&lt;/a> hosted by &lt;a href="https://www.meetup.com/las-vegas-functional-programming/">Las Vegas Functional Programming User Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=36.0655517578125&amp;amp;mlon=-115.1436538696289">Las Vegas, NV, USA&lt;/a>&lt;/li>
&lt;li>Thursday, August 9: &lt;a href="https://www.meetup.com/SEAHUG/events/252892445/">Category Theory for Programmers Part 3&lt;/a> hosted by &lt;a href="https://www.meetup.com/SEAHUG/">Seattle Area Haskell Users’ Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=47.64826965332031&amp;amp;mlon=-122.34236907958984">Seattle, USA&lt;/a>&lt;/li>
&lt;li>Thursday, August 9: &lt;a href="https://www.meetup.com/Lambda-Pi/events/252428689/">Our initial Meetup&lt;/a> hosted by &lt;a href="https://www.meetup.com/Lambda-Pi/">Lambda Pi&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=53.556358337402344&amp;amp;mlon=9.988266944885254">Hamburg, Germany&lt;/a>&lt;/li>
&lt;li>Friday, August 10: &lt;a href="https://www.meetup.com/Austin-Types-Theorems-and-Programming-Languages/events/253501281/">Going through Software Foundations by Benjamin Pierce et al&lt;/a> hosted by &lt;a href="https://www.meetup.com/Austin-Types-Theorems-and-Programming-Languages/">Austin Types, Theorems, and Programming Languages&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=30.39307975769043&amp;amp;mlon=-97.7469711303711">Austin, TX, USA&lt;/a>&lt;/li>
&lt;li>Saturday, August 11: &lt;a href="https://www.meetup.com/BC-HUG/events/253528208/">Weekly Haskell Coding Meetup&lt;/a> hosted by &lt;a href="https://www.meetup.com/BC-HUG/">BC Haskell Users Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=49.156490325927734&amp;amp;mlon=-121.9581298828125">Chilliwack, BC, Canada&lt;/a>&lt;/li>
&lt;li>Saturday, August 11: &lt;a href="https://www.meetup.com/Cape-Cod-Functional-Programming-Meetup/events/253578514/">Café hours&lt;/a> hosted by &lt;a href="https://www.meetup.com/Cape-Cod-Functional-Programming-Meetup/">Cape Cod Functional Programming Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=41.66825866699219&amp;amp;mlon=-70.12324523925781">Dennis Port, USA&lt;/a>&lt;/li>
&lt;li>Saturday, August 11: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005371/">Hang out, chat FP, work on some code&lt;/a> hosted by &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/">Weekly Functional Programming Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=42.35726547241211&amp;amp;mlon=-71.05818939208984">Boston, ma, USA&lt;/a>&lt;/li>
&lt;li>Sunday, August 12: &lt;a href="https://www.meetup.com/Gottingen-Haskell-Meetup/events/253556824/">Can we find other Haskellers&lt;/a> hosted by &lt;a href="https://www.meetup.com/Gottingen-Haskell-Meetup/">Göttingen Haskell Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=51.529998779296875&amp;amp;mlon=9.920000076293945">Göttingen, Germany&lt;/a>&lt;/li>
&lt;li>Sunday, August 12: &lt;a href="https://www.meetup.com/Bangalore-Functional-Programmers-Meetup/events/253089668/">Applicative in Haskell&lt;/a> hosted by &lt;a href="https://www.meetup.com/Bangalore-Functional-Programmers-Meetup/">Bangalore Functional Programmers Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=12.970000267028809&amp;amp;mlon=77.55999755859375">Bangalore, India&lt;/a>&lt;/li>
&lt;li>Monday, August 13: &lt;a href="https://www.meetup.com/orange-combinator/events/253458309/">Combinating - The Weekly Function&lt;/a> hosted by &lt;a href="https://www.meetup.com/orange-combinator/">Orange Combinator - Functional Programming In OC&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=33.7400016784668&amp;amp;mlon=-117.75">Irvine, CA&lt;/a>&lt;/li>
&lt;li>Monday, August 13: &lt;a href="https://www.meetup.com/Pittsburgh-Functional-Programming-Meetup/events/253496162/">Hack Night!&lt;/a> hosted by &lt;a href="https://www.meetup.com/Pittsburgh-Functional-Programming-Meetup/">Pittsburgh Functional Programming Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=40.471500396728516&amp;amp;mlon=-79.96011352539063">Pittsburgh, PA, USA&lt;/a>&lt;/li>
&lt;li>Monday, August 13: &lt;a href="https://www.meetup.com/lambda-luminaries/events/251751243/">Exact Calculations in Haskell by Petrus Potgieter&lt;/a> hosted by &lt;a href="https://www.meetup.com/lambda-luminaries/">Lambda Luminaries&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=-26.106260299682617&amp;amp;mlon=28.056909561157227">Sandton, South Africa&lt;/a>&lt;/li>
&lt;li>Tuesday, August 14: &lt;a href="https://www.meetup.com/CodeHub-Bristol/events/253369445/">Haskell study group! All welcome!&lt;/a> hosted by &lt;a href="https://www.meetup.com/CodeHub-Bristol/">CodeHub Bristol&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=51.45479202270508&amp;amp;mlon=-2.599644899368286">Bristol BS1 5SJ, United Kingdom&lt;/a>&lt;/li>
&lt;li>Tuesday, August 14: &lt;a href="https://www.meetup.com/santa-monica-haskell/events/253625750/">Haskell Study Group: Parametric Polymorphism&lt;/a> hosted by &lt;a href="https://www.meetup.com/santa-monica-haskell/">Santa Monica Haskell Users Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=34.01523971557617&amp;amp;mlon=-118.49053955078125">Santa Monica, CA, USA&lt;/a>&lt;/li>
&lt;li>Tuesday, August 14: &lt;a href="https://www.meetup.com/Buenos-Aires-Haskell-Meetup/events/253287359/">Servant: APIs web a nivel de tipos&lt;/a> hosted by &lt;a href="https://www.meetup.com/Buenos-Aires-Haskell-Meetup/">Buenos Aires Haskell Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=-34.59729766845703&amp;amp;mlon=-58.37212371826172">Buenos Aires, Argentina&lt;/a>&lt;/li>
&lt;li>Tuesday, August 14: &lt;a href="https://www.meetup.com/Brisbane-Functional-Programming-Group/events/248688776/">BFPG Monthly Meetup&lt;/a> hosted by &lt;a href="https://www.meetup.com/Brisbane-Functional-Programming-Group/">Brisbane Functional Programming Group (BFPG)&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=-27.4583797454834&amp;amp;mlon=153.03416442871094">Brisbane, Australia&lt;/a>&lt;/li>
&lt;li>Tuesday, August 14: &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/events/253467799/">2 Talks: FP in JS-land; Prototyping for Radar (part 2)&lt;/a> hosted by &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/">Functional Programming Auckland&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=-36.85873794555664&amp;amp;mlon=174.7685089111328">Auckland, New Zealand&lt;/a>&lt;/li>
&lt;li>Wednesday, August 15: &lt;a href="https://www.meetup.com/Berlin-Functional-Programming-Group/events/252030492/">FP Forum — Learn, Teach, Share, Grow&lt;/a> hosted by &lt;a href="https://www.meetup.com/Berlin-Functional-Programming-Group/">Berlin Functional Programming Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=52.48484420776367&amp;amp;mlon=13.357099533081055">Berlin, Germany&lt;/a>&lt;/li>
&lt;li>Wednesday, August 15: &lt;a href="https://www.meetup.com/ATX-Haskell/events/252838872/">Haskell Beginner-Friendly Lab&lt;/a> hosted by &lt;a href="https://www.meetup.com/ATX-Haskell/">Austin Haskell Users Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=30.390689849853516&amp;amp;mlon=-97.75304412841797">Austin, TX, USA&lt;/a>&lt;/li>
&lt;li>Wednesday, August 15: &lt;a href="https://www.meetup.com/Houston-Functional-Programmers/events/250815717/">Managing warehouse robots&lt;/a> hosted by &lt;a href="https://www.meetup.com/Houston-Functional-Programmers/">Houston Functional Programmers&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=29.709369659423828&amp;amp;mlon=-95.45894622802734">Houston, TX, USA&lt;/a>&lt;/li>
&lt;li>Wednesday, August 15: &lt;a href="https://www.meetup.com/CanFPG/events/252897783/">CanFP Monthly meetup&lt;/a> hosted by &lt;a href="https://www.meetup.com/CanFPG/">CanFP - The Canberra Functional Programming Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=-35.27530288696289&amp;amp;mlon=149.12063598632813">Canberra, Australia&lt;/a>&lt;/li>
&lt;li>Thursday, August 16: &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/events/253219863/">(hack . yack)&lt;/a> hosted by &lt;a href="https://www.meetup.com/Raleigh-Haskell-Meetup/">Raleigh Haskell Meetup&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=35.77825927734375&amp;amp;mlon=-78.63912963867188">Raleigh, NC, USA&lt;/a>&lt;/li>
&lt;li>Thursday, August 16: &lt;a href="https://www.meetup.com/SEAHUG/events/253049807/">Category Theory for Programmers Part 3&lt;/a> hosted by &lt;a href="https://www.meetup.com/SEAHUG/">Seattle Area Haskell Users’ Group&lt;/a> in &lt;a href="https://www.openstreetmap.org/?mlat=47.64826965332031&amp;amp;mlon=-122.34236907958984">Seattle, USA&lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>
<item>
  <guid>https://haskellweekly.news/issues/118.html</guid>
  <title>Issue 118</title>
  <link>https://haskellweekly.news/issues/118.html</link>
  <pubDate>Thu, 02 Aug 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://blog.nyarlathotep.one/2018/07/ghc-one-compiler-to-rule-them-all/">GHC, one compiler to &lt;code>RULE&lt;/code> them all&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I am using some GHC pragmas to optimize Alga and I must admit that they are very powerful. On the wise counsel of one of my GSoC mentors, A. Mokhov, here is a little summary of what I discovered, as this can help others.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://mgsloan.com/posts/ghcinception/">GHCinception: Running GHCi in GHCi&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’m happy to announce that you can now easily load GHC into GHCi! I’ve been using this for about a month now, and for me it makes GHC development far more pleasant than using make. This can often lead to iteration times of only 10-30 seconds to try out some modified behavior.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://vaibhavsagar.com/blog/2018/07/29/hamts-from-scratch/">Hash array mapped tries from scratch&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>If you haven’t heard of them before, HAMTs are a way of efficiently representing a hashtable as a trie, and although they were first envisioned as a mutable data structure they are easily adapted to work as a persistent data structure.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://danghica.blogspot.com/2018/07/haskell-if-monads-are-solution-what-is.html">If monads are the solution, what is the problem?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The lay interpretation is that monads are mathemagical constructs that allow you to add “computations” (also sometimes called “effects”) to a “pure” programming language. This lay interpretation is largely wrong and the Haskell monadic dogma is rather overblown.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-works.github.io/posts/2018-08-01-introduction-to-rank-select-bit-string.html">Introduction to the rank-select bit-string&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>If we want to minimise memory usage, the first thing you should do is avoid duplicating data. All the data we want to access is already in the document. Copying that data into intermediate objects so that we can work with them is wasteful.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://deliquus.com/posts/2018-07-30-imperative-programming-in-haskell.html">Making Haskell as fast as C: Imperative programming in Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This blog post compares several implementations of a concrete and relatively simple abstract data type in terms of execution time. Ultimately, we develop an imperative data structure using native Haskell code that is as fast as its C equivalent.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dselsam.github.io/quickspec/">QuickSpec and the quest for good lemmas&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Given a fixed set of proofs, it is natural to consider a lemma to be good to the extent it enables compression of the proofs. But how might we know if a lemma is good before we know how it will be used?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.fpcomplete.com/blog/2018/07/streaming-utf8-haskell-rust">Streaming UTF-8 in Haskell and Rust&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Since I seem to be a one-trick pony, I decided to write yet again to compare streaming data in Haskell and Rust. This was inspired by a cool post I saw on Reddit about converting characters in the Latin alphabet into look-alikes in the Cyrilic alphabet.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://iokasimov.github.io/posts/2018/07/type-walk-with-me">Type walk with me&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I lost count of how many times I’ve seen types/functions/families and another first-class abstractions that shouldn’t exist if we want to use more universal constructions. A little bit of theory can reduce and beautify our production code, and now I will try to demonstrate that.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://doisinkidney.com/posts/2018-07-30-verified-avl.html">Verified AVL trees in Haskell and Agda&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’ve been writing a lot of Agda recently, and had the occasion to write a Fenwick tree that did some rebalancing. I went with AVL-style rebalancing (rather than red-black or trees of bounded balance).&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;p>Are you looking to hire a Haskell developer?
You should &lt;a href="/advertising.html">advertise with us&lt;/a>!
Haskell Weekly reaches a highly engaged audience of almost 3,000 functional programming enthusiasts.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.lumi.com/jobs/full-stack-engineer">Full-stack engineer at Lumi in Los Angeles&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>As a full-stack engineer at Lumi, you will be an important part of our small and dynamic team, working on a wide variety of projects, from customer-facing features to internal tools. We strive to write elegant code to solve real-world problems.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/7/30/beam-database-power-without-template-haskell">Beam: Database power without Template Haskell&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/92xzre/hexplore_a_more_powerful_way_to_search_for/">HExplore: A more powerful way to search for packages on Hackage&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sulami.gitlab.io/posts/how-this-blog-is-made/">How to use Haskell to generate a blog in an unnecessarily convoluted way&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/93gbdn/monthly_hask_anything_august_2018/">Monthly Hask Anything: August 2018&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fpcomplete.com/blog/2018/08/pantry-part-3/specifying-dependencies">Pantry, part 3: Specifying dependencies&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mpg.is/papers/gissurarson2018suggesting-xp.pdf">Suggesting valid hole fits for typed-holes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/92vvoe/work_in_progress_ebook_haskell_for_javascript/">Work in progress e-book: Haskell for JavaScript developers&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://www.stackage.org/lts-12.4/package/foundation-0.0.21">Foundation&lt;/a>,
an alternative prelude with batteries included and no dependencies.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/disco-lang/disco/issues/131">disco: Test suite section for failures&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/qfpl/sv/issues/19">sv: Column-name-based decoding for sv-cassava&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;p>We are considering removing this section.
If you are interested in maintaining this section,
or simply don’t want to see it go,
please let us know &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io/issues/207">on GitHub&lt;/a>!&lt;/p>
&lt;ul>
&lt;li>August 2 in Singapore: &lt;a href="https://www.meetup.com/HASKELL-SG/events/252824929/">August Haskell meetup&lt;/a>&lt;/li>
&lt;li>August 4 in Boston, Massachusetts: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005369/">Hang out, chat FP, work on some code&lt;/a>&lt;/li>
&lt;li>August 6 in Melbourne, Australia: &lt;a href="https://www.meetup.com/Elm-Melbourne/events/250594838/">Elm hack night&lt;/a>&lt;/li>
&lt;li>August 7 in Singapore: &lt;a href="https://www.meetup.com/API-Craft-Singapore/events/253334006/">Building GraphQL APIs with Hasura&lt;/a>&lt;/li>
&lt;li>August 8 in Boulder, Colorado: &lt;a href="https://www.meetup.com/Boulder-Haskell-Programmers/events/253035578/">Bound for greatness&lt;/a>&lt;/li>
&lt;li>August 9 in Hamburg, Germany: &lt;a href="https://www.meetup.com/Lambda-Pi/events/252428689/">Lambda Pi’s initial meetup&lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>
<item>
  <guid>https://haskellweekly.news/issues/117.html</guid>
  <title>Issue 117</title>
  <link>https://haskellweekly.news/issues/117.html</link>
  <pubDate>Thu, 26 Jul 2018 00:00:00 GMT</pubDate>
  <description>&lt;p>Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://chrispenner.ca/posts/intro-to-finger-trees">A practical introduction to finger trees&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Finger trees are definitely the coolest data structure I was never taught in school. The gist of finger trees is that they represent sequences of elements where the elements also have a measurable “descriptor” of some kind.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://qfpl.io/posts/sv-1.0/">Announcing &lt;code>sv&lt;/code> 1.0&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>sv&lt;/code>, a CSV library for Haskell by the Queensland Functional Programming Lab, was released over four months ago. Since then, we’ve had feedback on what potential users want from the library, and we have altered the design to the point where we are now releasing a new version: &lt;code>sv&lt;/code> 1.0.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.clement.delafargue.name/posts/2018-07-19-bake-delicious-macaroon-burritos-with-servant.html">Bake delicious macaroon burritos with Servant&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’ve had the pleasure to find a team already enjoying the use of macaroons. One of my first missions was to improve how they were used to authorize API calls, in the context of Servant applications. After a few iterations, we’ve settled on a design I’m quite happy with.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://litx.io/blog-instance-map.html">Dependent typing and existential (de)serialization&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>One of Haskell’s present limitations is the lack of dependent types, meaning that the return type of a function cannot depend on the value of its inputs. This can be a frustrating restriction when dealing with serialized data or other untyped inputs.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://hub.zhox.com/posts/chocolatey-introduction/">Haskell &amp;amp; AppVeyor Chocolatey introduction&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>For those who are unaware, Windows has had quite a push lately to provide script-able ways to install packages. One such attempt that has gained quite a lot of traction is Chocolatey. Chocolatey also contains some of my own packages for installing GHC and Cabal.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://cs-syd.eu/posts/2018-07-28-mergeless">Merge-free synchronisation with &lt;code>mergeless&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Synchronisation between a client and a server has been a problem that I have been brewing on in the back of my mind for a long time now. Today I am releasing a Haskell library that helps with exactly this problem.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.fpcomplete.com/blog/2018/07/pantry-part-2-trees-keys">Pantry, part 2: Trees and keys&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This is part two of a series of blog posts on Pantry, a new storage and download system for Haskell packages. In March of last year, there was a bug on Hackage. The problem was resolved, but this made me wonder: Is there any reason why checksums should depend on inconsequential artifacts of the tar format?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/90xyb1/ann_smuggler_ghc_source_plugin_to_manage_import/">Smuggler: GHC source plugin to manage import section&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Hello everyone! We want to announce the first alpha version of &lt;code>smuggler&lt;/code> — the compiler plugin which removes unused imports automatically. Though we’re planning to add more features to help you manage the import sections easily!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-works.github.io/posts/2018-07-25-problem-of-parsing-large-datasets.html">The problem of parsing large datasets&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In data processing, the volume of data can be so large that the amount of time it takes to process a file matters. In my work, I try to optimize such jobs so that it is more efficient, but surprisingly, it is often not the business logic that is the bottleneck, but the parsing of files itself that consumes large amounts of CPU and memory.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.joachim-breitner.de/blog/742-WebGL%2C_Fragment_Shader%2C_GHCJS_and_reflex-dom">WebGL, Fragment Shader, GHCJS and &lt;code>reflex-dom&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>On the side and very slowly I am working on a little game that involves breeding spherical patterns. I want to implement it in Haskell, but have it run in the browser, so I reached for GHCJS, the Haskell-to-JavaScript compiler.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://medium.com/@neongreen/wire-is-hiring-a-haskell-developer-and-an-operations-engineer-berlin-51e7f3ed3050">Wire is hiring a Haskell developer in Berlin&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The backend team is pretty small (just four people) and recently we’ve been overwhelmed with work, which is exciting — but, admittedly, having a life is even more exciting, which is why we’re looking for: an intermediate-level Haskeller to work with us on the backend&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/904029/job_haskell_developer_interested_in_formal/">Here Technologies is hiring a Haskell developer in Berlin&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We are looking for Haskell developers with an interest in testing and formal methods. The job involves further developing and making use of the quickcheck-state-machine library, to perform state machine based end-to-end testing.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://functional.works-hub.com/jobs/software-engineer-new-york-new-york-united-states-7fd34">Kadena is hiring a Haskell developer in New York&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Located in New York, Kadena is utilizing the power of blockchain, Haskell, and their own smart contract language to solve business problems. Love Haskell and love Blockchain? Helluva role for you!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://adjoint-io.github.io">Adjoint open source&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.twitch.tv/videos/287889784">Edward Kmett: Haskell live-coding: Session 6: CEK machines&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/rsnikhil/RISCV-ISA-Spec/tree/e226df0699bfb2fbe03950c589008746ec0060d6">Forvis: A formal RISC-V ISA specification&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/7/23/making-the-jump-advancing-past-beginner-haskell">Making the jump: Advancing past beginner Haskell&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/atondwal/ee869b951b5cf9b6653f7deda0b7dbd8/bc976ebf475857d0115822f1f470b61eb11c0cbb">Popularity of Haskell extensions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alternativebit.fr/posts/haskell/ag/">Silver Searcher: Useful regexes for a Haskell code base&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=t0mhvd3-60Y">Simon Peyton Jones: Linear Haskell: Practical linearity in a higher-order polymorphic language&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/91f5r7/snack_incremental_nix_builds_for_haskell/">Snack: Incremental Nix builds for Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://hackage.haskell.org/package/slick-0.1.0.2">Slick&lt;/a>,
a static site generator written and configured using Haskell.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/bos/aeson/issues/654">aeson: &lt;code>{-# ANN otations #-}&lt;/code> cause interpreter to load.&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/haskell/haskell-ide-engine/issues/713">haskell-ide-engine: Get tests working on windows&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>July 26 in Zürich, Switzerland: &lt;a href="https://www.meetup.com/HaskellerZ/events/251632689/">Alex Silva: A tour of dependent types with Idris&lt;/a>&lt;/li>
&lt;li>July 27 in Ahmedabad, India: &lt;a href="https://www.meetup.com/Ahmedabad-Web-and-Mobile-Developers-Meetup/events/253092538/">GraphQL engine on Postgres&lt;/a>&lt;/li>
&lt;li>July 28 in Boston, Massachusetts: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/253005360/">Hang out, chat FP, work on some code&lt;/a>&lt;/li>
&lt;li>July 29 in Bangalore, India: &lt;a href="https://www.meetup.com/Bangalore-Functional-Programmers-Meetup/events/252925681/">Functors&lt;/a>&lt;/li>
&lt;li>July 30 in Portland, Oregon: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/253039606/">Chapter 2 of Parallel and Concurrent Programming in Haskell&lt;/a>&lt;/li>
&lt;li>July 31 in Detroit, Michigan: &lt;a href="https://www.meetup.com/Detroit-Functional-Developers/events/253127083/">Intro to Haskell types with drinks to follow&lt;/a>&lt;/li>
&lt;li>August 1 in Dublin, Ireland: &lt;a href="https://www.meetup.com/haskell-dublin-meetup/events/252468400/">Self-paced Haskell study group with special talk&lt;/a>&lt;/li>
&lt;li>August 2 in Singapore: &lt;a href="https://www.meetup.com/HASKELL-SG/events/252824929/">August Haskell meetup&lt;/a>&lt;/li>
&lt;/ul>
</description>
</item>

  </channel>
</rss>
